{
  "name": "playwright-mcp",
  "version": "1.0.0",
  "description": "End-to-end test automation project using Playwright with Model Context Protocol integration",
  "main": "index.js",
  "type": "module",
  "homepage": "https://github.com/leonardust/my-playwright-mcp#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/leonardust/my-playwright-mcp.git"
  },
  "documentation": {
    "coding-standards": "./CODING_STANDARDS.md",
    "ai-instructions": "./.copilot-instructions.md",
    "readme": "./README.md"
  },
  "scripts": {
    "test": "playwright test",
    "test:ui": "playwright test --ui",
    "test:headed": "playwright test --headed",
    "test:debug": "playwright test --debug",
    "test:report": "playwright test --reporter=html",
    "test:report:open": "playwright test --reporter=html && playwright show-report",
    "report:show": "playwright show-report",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "prepare": "husky",
    "app:start": "cd ../gad-gui-api-demo && npm start",
    "app:start:background": "cd ../gad-gui-api-demo && start npm start",
    "app:stop": "taskkill /f /im node.exe /t 2>nul || echo 'No Node.js processes to kill'",
    "dev": "npm run app:start:background && timeout 5 && npm run test",
    "dev:ui": "npm run app:start:background && timeout 5 && npm run test:ui"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@playwright/mcp": "^0.0.34",
    "@playwright/test": "^1.55.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.34.0",
    "@faker-js/faker": "^10.0.0",
    "@types/node": "^24.3.0",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "dotenv": "^17.2.1",
    "eslint": "^9.34.0",
    "eslint-plugin-playwright": "^2.2.2",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.5",
    "prettier": "^3.6.2"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
